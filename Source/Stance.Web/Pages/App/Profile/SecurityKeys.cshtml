@page "/app/profile/fido-security-keys"
@using Fido2NetLib.Objects
@using Stance.Web.Infrastructure.Constants
@model Stance.Web.Pages.App.Profile.SecurityKeys
@{ this.Layout = "Shared/_AppLayout"; }

<div class="row page-titles">
    <div class="align-self-center pl-0 col-md-7 col-12">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="@PageLocations.AppDashboard">Home</a></li>
            <li class="breadcrumb-item">Profile</li>
            <li class="breadcrumb-item active">Security Keys</li>
        </ol>
    </div>
     <div class="col-md-5 col-12 align-self-center d-flex justify-content-end pr-0 mt-2 mt-md-0 pr-0">
            <button class="btn btn-sm btn-primary mr-2"  type="button" data-type="@AuthenticatorAttachment.CrossPlatform">Add Token</button>
            <button class="btn btn-sm btn-primary" type="button" data-type="@AuthenticatorAttachment.Platform">Add TPM</button>     
        </div>
</div>
<div class="container-fluid">

    <div class="row">
        @await Component.InvokeAsync("ProfilePanel")
        <div class="col-lg-8 col-xlg-9 col-md-7">
            <div class="card">
                <div class="card">
                    <ul class="nav nav-tabs profile-tab" role="tablist" id="profileTabs">
                        <li class="nav-item"> <a class="nav-link" role="tab" asp-page="@PageLocations.AppProfileDetails">My Details</a> </li>
                        <li class="nav-item"> <a class="nav-link" role="tab" asp-page="@PageLocations.ChangePassword">Password</a> </li>
                        <li class="nav-item"> <a class="nav-link" role="tab" asp-page="@PageLocations.EnrollAuthenticatorApp">Authenticator App</a> </li>
                        <li class="nav-item"> <a class="nav-link active" role="tab" asp-page="@PageLocations.SecurityKeys">Security Keys</a> </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div class="tab-pane active" id="profile" role="tabpanel">
                            <div class="card-body">
                                <p>Security keys are hardware devices containing cryptographic keys. They can be used for two-factor authentication. Security keys must support the FIDO U2F standard.</p>
                                <p class="text-muted">There are two types, Cross Platform (Token) and Platform (TPM).  Cross Platform devices are portable devices like Yubikey (<a href="https://www.yubico.com/" target="_blank">www.yubico.com</a>) and Titan Security Key from Google (<a href="https://cloud.google.com/titan-security-key" target="_blank">cloud.google.com/titan-security-key</a>). Platform keys are device specific and feature items like Windows Hello (<a href="https://www.microsoft.com/en-gb/windows/windows-hello">www.microsoft.com/en-gb/windows/windows-hello</a>)</p>
                               
                                <hr />

                                <form class="list-group" method="post" id="registered-devices" data-endpoint-url="@Url.Action("RevokeDevice", "AuthDeviceApi")">
                                    <!-- .col -->
                                    @foreach (var device in Model.DeviceInfos)
                                    {
                                        <div class="list-group-item list-group-item-action flex-column align-items-start" data-device-id="@device.Id">
                                            <div class="d-flex w-100 justify-content-between mb-1">
                                                <h5 class="mb-1">@device.Name</h5>
                                                <button class="btn btn-danger btn-sm" type="submit" name="PageModel.DeviceId" value="@device.Id">Remove</button>
                                            </div>
                                            <div class="d-flex w-100 justify-content-between">
                                                <p class="mb-1">When Enrolled: <small>@device.WhenEnrolled.ToString("dd/MM/yyyy")</small></p>
                                                <p class="mb-1">When Last Used: <small>@(device.WhenLastUsed.HasValue ? device.WhenLastUsed.Value.ToString("dd/MM/yyyy"): "Not Used")</small></p>
                                            </div>
                                        </div>
                                    }


                                </form>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<form class="modal fade form-material" id="new-device-model" tabindex="-1" role="dialog"  aria-hidden="true" data-device-registration data-initiate-url="@Url.Action("InitialAuthDeviceRegistration", "AuthDeviceApi")" data-complete-url="@Url.Action("CompleteAuthDeviceRegistration", "AuthDeviceApi")" data-no-auto-validation>
  <div class="modal-dialog modal-dialog-slideout" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Add Token</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
        <div class="modal-body">
            <p>When you are ready, give the device a friendly name do you can recognize it again, click the "Add" button and follow the on screen instructions</p>
            <div class="form-group m-b-5">
                <label asp-for="PageModel.Name"></label>
                <input type="text" class="form-control" data-name asp-for="PageModel.Name"/>
                <span class="text-danger small" asp-validation-for="PageModel.Name"></span>
            </div>
        </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-sm btn-info">Add</button>
      </div>
    </div>
  </div>
</form>
@section scripts
{
    <script type="text/javascript" src="~/profile-device.js.gz" asp-append-version="true"></script>
    <script type="text/template-html" id="device-template">
        <div class="list-group-item list-group-item-action flex-column align-items-start">
            <div class="d-flex w-100 justify-content-between mb-1">
                <h5 class="mb-1" data-device-name></h5>
                <button class="btn btn-danger btn-sm" type="submit" name="PageModel.DeviceId" data-device-remove value="">Remove</button>
            </div>
            <div class="d-flex w-100 justify-content-between">
                <p class="mb-1">When Enrolled: <small data-when-enrolled></small></p>
                <p class="mb-1">When Last Used: <small>Not Used</small></p>
            </div>
        </div>
    </script>
}
