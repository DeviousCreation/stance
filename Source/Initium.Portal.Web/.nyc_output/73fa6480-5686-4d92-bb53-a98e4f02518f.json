{"C:\\Users\\andre\\Documents\\Github\\stance\\Source\\Initium.Portal.Web\\Resources\\Scripts\\services\\validator.spec.ts":{"path":"C:\\Users\\andre\\Documents\\Github\\stance\\Source\\Initium.Portal.Web\\Resources\\Scripts\\services\\validator.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":10},"end":{"line":6,"column":84}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":34}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":45}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":38}},"8":{"start":{"line":11,"column":23},"end":{"line":11,"column":53}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":58}},"10":{"start":{"line":13,"column":20},"end":{"line":13,"column":51}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":29}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":27}},"14":{"start":{"line":17,"column":4},"end":{"line":17,"column":55}},"15":{"start":{"line":18,"column":4},"end":{"line":19,"column":32}},"16":{"start":{"line":19,"column":8},"end":{"line":19,"column":32}},"17":{"start":{"line":20,"column":4},"end":{"line":20,"column":33}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":36}},"19":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"20":{"start":{"line":24,"column":0},"end":{"line":136,"column":3}},"21":{"start":{"line":25,"column":4},"end":{"line":63,"column":7}},"22":{"start":{"line":26,"column":8},"end":{"line":32,"column":11}},"23":{"start":{"line":27,"column":23},"end":{"line":27,"column":53}},"24":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"25":{"start":{"line":29,"column":12},"end":{"line":29,"column":82}},"26":{"start":{"line":30,"column":28},"end":{"line":30,"column":59}},"27":{"start":{"line":31,"column":12},"end":{"line":31,"column":67}},"28":{"start":{"line":33,"column":8},"end":{"line":38,"column":11}},"29":{"start":{"line":34,"column":23},"end":{"line":34,"column":53}},"30":{"start":{"line":35,"column":12},"end":{"line":35,"column":91}},"31":{"start":{"line":36,"column":28},"end":{"line":36,"column":59}},"32":{"start":{"line":37,"column":12},"end":{"line":37,"column":67}},"33":{"start":{"line":39,"column":8},"end":{"line":44,"column":11}},"34":{"start":{"line":40,"column":23},"end":{"line":40,"column":53}},"35":{"start":{"line":41,"column":12},"end":{"line":41,"column":82}},"36":{"start":{"line":42,"column":28},"end":{"line":42,"column":59}},"37":{"start":{"line":43,"column":12},"end":{"line":43,"column":68}},"38":{"start":{"line":45,"column":8},"end":{"line":53,"column":11}},"39":{"start":{"line":46,"column":23},"end":{"line":46,"column":53}},"40":{"start":{"line":47,"column":24},"end":{"line":47,"column":75}},"41":{"start":{"line":48,"column":12},"end":{"line":48,"column":36}},"42":{"start":{"line":49,"column":28},"end":{"line":49,"column":59}},"43":{"start":{"line":50,"column":12},"end":{"line":50,"column":33}},"44":{"start":{"line":51,"column":12},"end":{"line":51,"column":76}},"45":{"start":{"line":52,"column":12},"end":{"line":52,"column":104}},"46":{"start":{"line":54,"column":8},"end":{"line":62,"column":11}},"47":{"start":{"line":55,"column":23},"end":{"line":55,"column":53}},"48":{"start":{"line":56,"column":24},"end":{"line":56,"column":82}},"49":{"start":{"line":57,"column":12},"end":{"line":57,"column":36}},"50":{"start":{"line":58,"column":28},"end":{"line":58,"column":59}},"51":{"start":{"line":59,"column":12},"end":{"line":59,"column":33}},"52":{"start":{"line":60,"column":12},"end":{"line":60,"column":78}},"53":{"start":{"line":61,"column":12},"end":{"line":61,"column":92}},"54":{"start":{"line":64,"column":4},"end":{"line":76,"column":7}},"55":{"start":{"line":65,"column":8},"end":{"line":75,"column":11}},"56":{"start":{"line":66,"column":23},"end":{"line":66,"column":53}},"57":{"start":{"line":67,"column":24},"end":{"line":67,"column":75}},"58":{"start":{"line":68,"column":12},"end":{"line":68,"column":36}},"59":{"start":{"line":69,"column":28},"end":{"line":69,"column":59}},"60":{"start":{"line":70,"column":12},"end":{"line":70,"column":33}},"61":{"start":{"line":71,"column":12},"end":{"line":71,"column":30}},"62":{"start":{"line":72,"column":12},"end":{"line":72,"column":77}},"63":{"start":{"line":73,"column":12},"end":{"line":73,"column":79}},"64":{"start":{"line":74,"column":12},"end":{"line":74,"column":92}},"65":{"start":{"line":77,"column":4},"end":{"line":135,"column":7}},"66":{"start":{"line":78,"column":8},"end":{"line":85,"column":11}},"67":{"start":{"line":79,"column":23},"end":{"line":79,"column":53}},"68":{"start":{"line":80,"column":24},"end":{"line":80,"column":75}},"69":{"start":{"line":81,"column":12},"end":{"line":81,"column":36}},"70":{"start":{"line":82,"column":28},"end":{"line":82,"column":59}},"71":{"start":{"line":83,"column":12},"end":{"line":83,"column":33}},"72":{"start":{"line":84,"column":12},"end":{"line":84,"column":76}},"73":{"start":{"line":86,"column":8},"end":{"line":93,"column":11}},"74":{"start":{"line":87,"column":23},"end":{"line":87,"column":53}},"75":{"start":{"line":88,"column":24},"end":{"line":88,"column":81}},"76":{"start":{"line":89,"column":12},"end":{"line":89,"column":36}},"77":{"start":{"line":90,"column":28},"end":{"line":90,"column":59}},"78":{"start":{"line":91,"column":12},"end":{"line":91,"column":33}},"79":{"start":{"line":92,"column":12},"end":{"line":92,"column":76}},"80":{"start":{"line":94,"column":8},"end":{"line":101,"column":11}},"81":{"start":{"line":95,"column":23},"end":{"line":95,"column":53}},"82":{"start":{"line":96,"column":24},"end":{"line":96,"column":81}},"83":{"start":{"line":97,"column":12},"end":{"line":97,"column":36}},"84":{"start":{"line":98,"column":28},"end":{"line":98,"column":59}},"85":{"start":{"line":99,"column":12},"end":{"line":99,"column":33}},"86":{"start":{"line":100,"column":12},"end":{"line":100,"column":76}},"87":{"start":{"line":102,"column":8},"end":{"line":110,"column":11}},"88":{"start":{"line":103,"column":23},"end":{"line":103,"column":53}},"89":{"start":{"line":104,"column":24},"end":{"line":104,"column":85}},"90":{"start":{"line":105,"column":12},"end":{"line":105,"column":71}},"91":{"start":{"line":106,"column":12},"end":{"line":106,"column":36}},"92":{"start":{"line":107,"column":28},"end":{"line":107,"column":59}},"93":{"start":{"line":108,"column":12},"end":{"line":108,"column":33}},"94":{"start":{"line":109,"column":12},"end":{"line":109,"column":76}},"95":{"start":{"line":111,"column":8},"end":{"line":125,"column":11}},"96":{"start":{"line":112,"column":23},"end":{"line":112,"column":53}},"97":{"start":{"line":113,"column":24},"end":{"line":113,"column":83}},"98":{"start":{"line":114,"column":12},"end":{"line":114,"column":77}},"99":{"start":{"line":115,"column":28},"end":{"line":115,"column":59}},"100":{"start":{"line":116,"column":12},"end":{"line":116,"column":36}},"101":{"start":{"line":117,"column":12},"end":{"line":117,"column":39}},"102":{"start":{"line":118,"column":12},"end":{"line":118,"column":37}},"103":{"start":{"line":119,"column":12},"end":{"line":119,"column":36}},"104":{"start":{"line":120,"column":12},"end":{"line":120,"column":36}},"105":{"start":{"line":121,"column":12},"end":{"line":121,"column":40}},"106":{"start":{"line":122,"column":28},"end":{"line":122,"column":59}},"107":{"start":{"line":123,"column":12},"end":{"line":123,"column":33}},"108":{"start":{"line":124,"column":12},"end":{"line":124,"column":76}},"109":{"start":{"line":126,"column":8},"end":{"line":134,"column":11}},"110":{"start":{"line":127,"column":23},"end":{"line":127,"column":53}},"111":{"start":{"line":128,"column":24},"end":{"line":128,"column":81}},"112":{"start":{"line":129,"column":12},"end":{"line":129,"column":77}},"113":{"start":{"line":130,"column":12},"end":{"line":130,"column":36}},"114":{"start":{"line":131,"column":28},"end":{"line":131,"column":59}},"115":{"start":{"line":132,"column":12},"end":{"line":132,"column":33}},"116":{"start":{"line":133,"column":12},"end":{"line":133,"column":76}}},"fnMap":{"0":{"name":"generateInputGroup","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":27}},"loc":{"start":{"line":8,"column":71},"end":{"line":23,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":30},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":42},"end":{"line":136,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":25},"end":{"line":25,"column":26}},"loc":{"start":{"line":25,"column":37},"end":{"line":63,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":58},"end":{"line":26,"column":59}},"loc":{"start":{"line":26,"column":70},"end":{"line":32,"column":9}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":92},"end":{"line":33,"column":93}},"loc":{"start":{"line":33,"column":104},"end":{"line":38,"column":9}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":97},"end":{"line":39,"column":98}},"loc":{"start":{"line":39,"column":109},"end":{"line":44,"column":9}},"line":39},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":109},"end":{"line":45,"column":110}},"loc":{"start":{"line":45,"column":121},"end":{"line":53,"column":9}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":105},"end":{"line":54,"column":106}},"loc":{"start":{"line":54,"column":117},"end":{"line":62,"column":9}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":22},"end":{"line":64,"column":23}},"loc":{"start":{"line":64,"column":34},"end":{"line":76,"column":5}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":74},"end":{"line":65,"column":75}},"loc":{"start":{"line":65,"column":86},"end":{"line":75,"column":9}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":77,"column":33},"end":{"line":77,"column":34}},"loc":{"start":{"line":77,"column":45},"end":{"line":135,"column":5}},"line":77},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":71},"end":{"line":78,"column":72}},"loc":{"start":{"line":78,"column":83},"end":{"line":85,"column":9}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":86,"column":66},"end":{"line":86,"column":67}},"loc":{"start":{"line":86,"column":78},"end":{"line":93,"column":9}},"line":86},"13":{"name":"(anonymous_13)","decl":{"start":{"line":94,"column":66},"end":{"line":94,"column":67}},"loc":{"start":{"line":94,"column":78},"end":{"line":101,"column":9}},"line":94},"14":{"name":"(anonymous_14)","decl":{"start":{"line":102,"column":70},"end":{"line":102,"column":71}},"loc":{"start":{"line":102,"column":82},"end":{"line":110,"column":9}},"line":102},"15":{"name":"(anonymous_15)","decl":{"start":{"line":111,"column":70},"end":{"line":111,"column":71}},"loc":{"start":{"line":111,"column":82},"end":{"line":125,"column":9}},"line":111},"16":{"name":"(anonymous_16)","decl":{"start":{"line":126,"column":66},"end":{"line":126,"column":67}},"loc":{"start":{"line":126,"column":78},"end":{"line":134,"column":9}},"line":126}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":19,"column":32}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":19,"column":32}},{"start":{"line":18,"column":4},"end":{"line":19,"column":32}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":12,"7":12,"8":12,"9":12,"10":12,"11":12,"12":12,"13":12,"14":12,"15":12,"16":7,"17":12,"18":12,"19":12,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1},"f":{"0":12,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"b":{"0":[7,5]},"inputSourceMap":{"version":3,"file":"C:/Users/andre/Documents/Github/stance/Source/Initium.Portal.Web/Resources/Scripts/services/validator.spec.ts","sources":["C:/Users/andre/Documents/Github/stance/Source/Initium.Portal.Web/Resources/Scripts/services/validator.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\r\nimport {Validator} from './validator';\r\nimport { JSDOM } from 'jsdom';\r\n\r\nconst dom = new JSDOM(`<!DOCTYPE html><html lang=\"en\"><body></body></html>`);\r\nconst document = dom.window.document;\r\n\r\nfunction generateInputGroup(inputId: string, inputType: string, validationType: string, value?: any): HTMLDivElement {\r\n    const group = document.createElement('div');\r\n    group.classList.add('form-group');\r\n    const errorMessage = document.createElement('span');\r\n    errorMessage.setAttribute('data-valmsg-for', inputId);\r\n\r\n    const textInput = document.createElement('input');\r\n    textInput.type = inputType;\r\n    textInput.name = inputId;\r\n    textInput.id = inputId;\r\n    textInput.dataset[validationType] = 'some-message';\r\n    if(value)\r\n        textInput.value = value;\r\n    group.appendChild(textInput);\r\n    group.appendChild(errorMessage);\r\n\r\n    return group;\r\n}\r\n\r\ndescribe('Validation Helper', () => {\r\n    describe('validate', () => {\r\n        it('when form has validate then result is false', () => {\r\n\r\n            const form = document.createElement('form');\r\n            form.dataset.noValidate = '';\r\n            form.appendChild(generateInputGroup('input1', 'text', 'valRequired'));\r\n            const validator: Validator = new Validator(form);\r\n            expect(validator.validate().isValid).to.be.true;\r\n        });\r\n        it('when form has validatable elements and elements are valid then result is true', () => {\r\n            const form = document.createElement('form');\r\n            form.appendChild(generateInputGroup('input1', 'text', 'valRequired', 'value'));\r\n            const validator: Validator = new Validator(form);\r\n            expect(validator.validate().isValid).to.be.true;\r\n        });\r\n        it('when form has validatable elements and elements are not valid then result is false', () => {\r\n            const form = document.createElement('form');\r\n            form.appendChild(generateInputGroup('input1', 'text', 'valRequired'));\r\n            const validator: Validator = new Validator(form);\r\n            expect(validator.validate().isValid).to.be.false;\r\n        });\r\n        it('when form has validatable elements and elements are not valid then element should be decorated', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valRequired');\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-error')).to.be.true;\r\n            expect(group.querySelector('span[data-valmsg-for]').innerHTML).to.eq('some-message')\r\n        });\r\n        it('when form has validatable elements and elements are valid then element should be decorated', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valRequired', 'val');\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-success')).to.be.true;\r\n            expect(group.querySelector('span[data-valmsg-for]').innerHTML).to.eq('')\r\n        });\r\n    });\r\n    describe('reset', () => {\r\n        it('when form has been validate expect validation to be removed', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valRequired');\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            validator.reset();\r\n            expect(group.classList.contains('has-error')).to.be.false;\r\n            expect(group.classList.contains('has-success')).to.be.false;\r\n            expect(group.querySelector('span[data-valmsg-for]').innerHTML).to.eq('')\r\n        });\r\n    });\r\n    describe('validation rules', () => {\r\n        it('when valRequired expect a required validation to be used', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valRequired');\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-error')).to.be.true;\r\n        });\r\n        it('when valEmail expect an email validation to be used', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valEmail', 'value');\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-error')).to.be.true;\r\n        });\r\n        it('when valEmail expect an email validation to be used', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valEmail', 'value');\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-error')).to.be.true;\r\n        });\r\n        it('when valMinlength expect a length validation to be used', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valMinlength', 'value');\r\n            group.querySelector('input').dataset.valMinlengthMin = '6';\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-error')).to.be.true;\r\n        });\r\n        it('when valEqualto expect a equality validation to be used', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valEqualto', 'value');\r\n            group.querySelector('input').dataset.valEqualtoOther = 'compare';\r\n            const textInput = document.createElement('input');\r\n            textInput.type = 'text';\r\n            textInput.name = 'compare';\r\n            textInput.id = 'compare';\r\n            textInput.value = 'val';\r\n            form.appendChild(group);\r\n            form.appendChild(textInput);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-error')).to.be.true;\r\n        });\r\n        it('when valRegex expect a format validation to be used', () => {\r\n            const form = document.createElement('form');\r\n            const group = generateInputGroup('input1', 'text', 'valRegex', 'value');\r\n            group.querySelector('input').dataset.valRegexPattern = '^[0-9]$';\r\n            form.appendChild(group);\r\n            const validator: Validator = new Validator(form);\r\n            validator.validate();\r\n            expect(group.classList.contains('has-error')).to.be.true;\r\n        });\r\n    });\r\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e270483f4d3f5753826b971b93179f5b27477b2f","contentHash":"9b97254f655770d1acbcfe5b966ad3ca39dcd0d698506e0464f5a059c9c2f31c"}}